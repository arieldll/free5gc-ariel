/*
Nnef_EventExposure

NEF Event Exposure Service.   Â© 2022 , 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UeCommunicationInfo Contains UE communication information associated with an application.
type UeCommunicationInfo struct {
	Supi *Object `json:"supi,omitempty"`
	InterGroupId *Object `json:"interGroupId,omitempty"`
	AppId *Object `json:"appId,omitempty"`
	Comms []Object `json:"comms"`
}

// NewUeCommunicationInfo instantiates a new UeCommunicationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUeCommunicationInfo(comms []Object) *UeCommunicationInfo {
	this := UeCommunicationInfo{}
	this.Comms = comms
	return &this
}

// NewUeCommunicationInfoWithDefaults instantiates a new UeCommunicationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUeCommunicationInfoWithDefaults() *UeCommunicationInfo {
	this := UeCommunicationInfo{}
	return &this
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *UeCommunicationInfo) GetSupi() Object {
	if o == nil || o.Supi == nil {
		var ret Object
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeCommunicationInfo) GetSupiOk() (*Object, bool) {
	if o == nil || o.Supi == nil {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *UeCommunicationInfo) HasSupi() bool {
	if o != nil && o.Supi != nil {
		return true
	}

	return false
}

// SetSupi gets a reference to the given Object and assigns it to the Supi field.
func (o *UeCommunicationInfo) SetSupi(v Object) {
	o.Supi = &v
}

// GetInterGroupId returns the InterGroupId field value if set, zero value otherwise.
func (o *UeCommunicationInfo) GetInterGroupId() Object {
	if o == nil || o.InterGroupId == nil {
		var ret Object
		return ret
	}
	return *o.InterGroupId
}

// GetInterGroupIdOk returns a tuple with the InterGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeCommunicationInfo) GetInterGroupIdOk() (*Object, bool) {
	if o == nil || o.InterGroupId == nil {
		return nil, false
	}
	return o.InterGroupId, true
}

// HasInterGroupId returns a boolean if a field has been set.
func (o *UeCommunicationInfo) HasInterGroupId() bool {
	if o != nil && o.InterGroupId != nil {
		return true
	}

	return false
}

// SetInterGroupId gets a reference to the given Object and assigns it to the InterGroupId field.
func (o *UeCommunicationInfo) SetInterGroupId(v Object) {
	o.InterGroupId = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *UeCommunicationInfo) GetAppId() Object {
	if o == nil || o.AppId == nil {
		var ret Object
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeCommunicationInfo) GetAppIdOk() (*Object, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *UeCommunicationInfo) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given Object and assigns it to the AppId field.
func (o *UeCommunicationInfo) SetAppId(v Object) {
	o.AppId = &v
}

// GetComms returns the Comms field value
func (o *UeCommunicationInfo) GetComms() []Object {
	if o == nil {
		var ret []Object
		return ret
	}

	return o.Comms
}

// GetCommsOk returns a tuple with the Comms field value
// and a boolean to check if the value has been set.
func (o *UeCommunicationInfo) GetCommsOk() (*[]Object, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Comms, true
}

// SetComms sets field value
func (o *UeCommunicationInfo) SetComms(v []Object) {
	o.Comms = v
}

func (o UeCommunicationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Supi != nil {
		toSerialize["supi"] = o.Supi
	}
	if o.InterGroupId != nil {
		toSerialize["interGroupId"] = o.InterGroupId
	}
	if o.AppId != nil {
		toSerialize["appId"] = o.AppId
	}
	if true {
		toSerialize["comms"] = o.Comms
	}
	return json.Marshal(toSerialize)
}

type NullableUeCommunicationInfo struct {
	value *UeCommunicationInfo
	isSet bool
}

func (v NullableUeCommunicationInfo) Get() *UeCommunicationInfo {
	return v.value
}

func (v *NullableUeCommunicationInfo) Set(val *UeCommunicationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUeCommunicationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUeCommunicationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeCommunicationInfo(val *UeCommunicationInfo) *NullableUeCommunicationInfo {
	return &NullableUeCommunicationInfo{value: val, isSet: true}
}

func (v NullableUeCommunicationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeCommunicationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


