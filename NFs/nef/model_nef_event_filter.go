/*
Nnef_EventExposure

NEF Event Exposure Service.   Â© 2022 , 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NefEventFilter Represents event filter information for an event.
type NefEventFilter struct {
	TgtUe TargetUeIdentification `json:"tgtUe"`
	AppIds *[]Object `json:"appIds,omitempty"`
	LocArea *Object `json:"locArea,omitempty"`
	CollAttrs *[]Object `json:"collAttrs,omitempty"`
}

// NewNefEventFilter instantiates a new NefEventFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNefEventFilter(tgtUe TargetUeIdentification) *NefEventFilter {
	this := NefEventFilter{}
	this.TgtUe = tgtUe
	return &this
}

// NewNefEventFilterWithDefaults instantiates a new NefEventFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNefEventFilterWithDefaults() *NefEventFilter {
	this := NefEventFilter{}
	return &this
}

// GetTgtUe returns the TgtUe field value
func (o *NefEventFilter) GetTgtUe() TargetUeIdentification {
	if o == nil {
		var ret TargetUeIdentification
		return ret
	}

	return o.TgtUe
}

// GetTgtUeOk returns a tuple with the TgtUe field value
// and a boolean to check if the value has been set.
func (o *NefEventFilter) GetTgtUeOk() (*TargetUeIdentification, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TgtUe, true
}

// SetTgtUe sets field value
func (o *NefEventFilter) SetTgtUe(v TargetUeIdentification) {
	o.TgtUe = v
}

// GetAppIds returns the AppIds field value if set, zero value otherwise.
func (o *NefEventFilter) GetAppIds() []Object {
	if o == nil || o.AppIds == nil {
		var ret []Object
		return ret
	}
	return *o.AppIds
}

// GetAppIdsOk returns a tuple with the AppIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefEventFilter) GetAppIdsOk() (*[]Object, bool) {
	if o == nil || o.AppIds == nil {
		return nil, false
	}
	return o.AppIds, true
}

// HasAppIds returns a boolean if a field has been set.
func (o *NefEventFilter) HasAppIds() bool {
	if o != nil && o.AppIds != nil {
		return true
	}

	return false
}

// SetAppIds gets a reference to the given []Object and assigns it to the AppIds field.
func (o *NefEventFilter) SetAppIds(v []Object) {
	o.AppIds = &v
}

// GetLocArea returns the LocArea field value if set, zero value otherwise.
func (o *NefEventFilter) GetLocArea() Object {
	if o == nil || o.LocArea == nil {
		var ret Object
		return ret
	}
	return *o.LocArea
}

// GetLocAreaOk returns a tuple with the LocArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefEventFilter) GetLocAreaOk() (*Object, bool) {
	if o == nil || o.LocArea == nil {
		return nil, false
	}
	return o.LocArea, true
}

// HasLocArea returns a boolean if a field has been set.
func (o *NefEventFilter) HasLocArea() bool {
	if o != nil && o.LocArea != nil {
		return true
	}

	return false
}

// SetLocArea gets a reference to the given Object and assigns it to the LocArea field.
func (o *NefEventFilter) SetLocArea(v Object) {
	o.LocArea = &v
}

// GetCollAttrs returns the CollAttrs field value if set, zero value otherwise.
func (o *NefEventFilter) GetCollAttrs() []Object {
	if o == nil || o.CollAttrs == nil {
		var ret []Object
		return ret
	}
	return *o.CollAttrs
}

// GetCollAttrsOk returns a tuple with the CollAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefEventFilter) GetCollAttrsOk() (*[]Object, bool) {
	if o == nil || o.CollAttrs == nil {
		return nil, false
	}
	return o.CollAttrs, true
}

// HasCollAttrs returns a boolean if a field has been set.
func (o *NefEventFilter) HasCollAttrs() bool {
	if o != nil && o.CollAttrs != nil {
		return true
	}

	return false
}

// SetCollAttrs gets a reference to the given []Object and assigns it to the CollAttrs field.
func (o *NefEventFilter) SetCollAttrs(v []Object) {
	o.CollAttrs = &v
}

func (o NefEventFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tgtUe"] = o.TgtUe
	}
	if o.AppIds != nil {
		toSerialize["appIds"] = o.AppIds
	}
	if o.LocArea != nil {
		toSerialize["locArea"] = o.LocArea
	}
	if o.CollAttrs != nil {
		toSerialize["collAttrs"] = o.CollAttrs
	}
	return json.Marshal(toSerialize)
}

type NullableNefEventFilter struct {
	value *NefEventFilter
	isSet bool
}

func (v NullableNefEventFilter) Get() *NefEventFilter {
	return v.value
}

func (v *NullableNefEventFilter) Set(val *NefEventFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableNefEventFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableNefEventFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNefEventFilter(val *NefEventFilter) *NullableNefEventFilter {
	return &NullableNefEventFilter{value: val, isSet: true}
}

func (v NullableNefEventFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNefEventFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


